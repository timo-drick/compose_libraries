uniform float2 iResolution;
uniform float iTime;

const float PI = 3.14159265359;

mat2 rot(float a) {
    float s=sin(a), c=cos(a);
    return mat2(c, -s, s, c);
}

// Signed distance function for a box
float sdBox(vec2 p, vec2 b) {
    vec2 d = abs(p)-b;
    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);
}

vec4 main(vec2 fragCoord) {
    fragCoord = fragCoord / iResolution * 2.0 - 1.0;
    float aspect = iResolution.y / iResolution.x; // aspect ratio
    if (aspect > 1.0) { // landscape mode?
        fragCoord.y *= aspect;
    } else {
        fragCoord.x /= aspect;
    }
    float angle = -PI * .5 * iTime; // - to rotate clock wise
    fragCoord *= rot(angle); // rotate coordinate system
    float d = sdBox(fragCoord, vec2(.2, .2));
    return vec4(d, 0., .0, 1);
}
